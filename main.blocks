<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="^L)c|q}W=|mC(7q8bsZd">connected</variable><variable id="a13$L_8V!,8o$l]FhJU6">command</variable><variable id="Zq}f$IrGLJ3}{rp%,,VN">buzz</variable><variable id="ZUC8rsRK,P;*)[1Pj1(n">silent</variable></variables><comment id="iQJcPqf$27OV6afmmNqn" data="0" x="-359" y="-107" h="238.03302001953125" w="362.92755126953125">MAIN

An audible buzzer, expected to paired with a Raspberry Pi "pegmon" alarm system.

Here we enable the bluetooth UART service (it's disabled by default) and set some control variables.</comment><comment id="l_aW83t~]]Ai3t,//#@7" data="1" x="60" y="-111" h="194.29669189453125" w="323.36865234375">A function to clear the display, used when the device starts and after an alarm has been cleared. Just keep one LED lit, to indicate we're "awake" and have power.

We also reset the silent flag.</comment><comment id="whz5ET3|j2Hev9LWj_j@" data="2" x="436" y="-115" h="267.2784729003906" w="318.45947265625">If button "B" is pressed we set a control variable that silences the audible part of the alarm.

This essentially allows us to "acknowledge" the alarm, silencing it. The visual part of the alarm continues to operate until a command is received from pegmon.</comment><comment id="m$/m?((K;WY7!II`cX5v" data="3" x="-359" y="608" h="187.62124633789062" w="478.463134765625">When the pegmon device connects, which is usually brief for the transmission of one command, we sit reading the UART, collecting characters that form a command up to a ":" delimiter. If the "command" is "buzz" we simply set the "buzz" boolean. We cease the alarm when if we get the "nobuzz" command and ignore everything else.</comment><block type="control_in_background" id="uWkqPR]!MTV;CX:|_%!]" x="810" y="9"><comment pinned="false" h="80" w="160" relx="10" rely="10">The alarm loop - operating continuously in the background.

Here, if "buzz" is True we start the alarm sequence, which consists of making a warning sound and then flashing a visual symbol (an exclamation mark). We continue to do this, checking the "buzz" variable regularly, until "buzz" is false.

If "silent" is True (which is set by pressing button "B" during the alarm sequence) we silence the audible part of the alarm but continue the visual part.

We increase the brightness of the LEDs which are dimmed again (by the "clear()" function) when the alarm ceases.</comment><statement name="HANDLER"><block type="device_while" id="zE#~bHLnj}zK6=-Q-|{F"><value name="COND"><shadow type="logic_boolean" id="ErP,^DwsWJ)q^|1h1)Rd"><field name="BOOL">TRUE</field></shadow></value><statement name="DO"><block type="controls_if" id="WgI3}pOO)TW^/yob]!JR"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="x7*p#i9P?G?%pFd3]=W{"><field name="VAR" id="Zq}f$IrGLJ3}{rp%,,VN">buzz</field></block></value><statement name="DO0"><block type="device_set_brightness" id="5F%F%uw5W=J.0aI(zdMR"><value name="value"><shadow type="math_number_minmax" id="0k1RZehJ)KdDV,x49:Z~"><mutation min="0" max="255" label="Number" precision="0"/><field name="SLIDER">32</field></shadow></value><next><block type="device_while" id="|UG$HJMQz3_o?d^-#HhF"><value name="COND"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="D1B6f-@U[n|rv2jtrO=~"><field name="VAR" id="Zq}f$IrGLJ3}{rp%,,VN">buzz</field></block></value><statement name="DO"><block type="controls_if" id="+|dMFNCJ{8$6c{xyq@hN"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="rh#p^M0V5J[%|YEJm!BY"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="GTMYW+mD0_Smd?leK)=N"><field name="VAR" id="ZUC8rsRK,P;*)[1Pj1(n">silent</field></block></value></block></value><statement name="DO0"><block type="SoundExpression_play" id="AC1gL,/{4Fvwtmf.793N"><field name="this">soundExpression.giggle</field></block></statement><next><block type="controls_repeat_ext" id="WtT[~q2g-O$5T[bi1@Gs"><value name="TIMES"><shadow type="math_whole_number" id="5apk@k4OlSsVd|LRw%.Y"><field name="NUM">20</field></shadow></value><statement name="DO"><block type="controls_if" id="%`6+eYPS{k0]M=+w6aTw"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="@{-LuDegyqehE-g{!wv}"><field name="VAR" id="Zq}f$IrGLJ3}{rp%,,VN">buzz</field></block></value><statement name="DO0"><block type="device_show_leds" id="~4_4:vU.0PAfGv|~iA^G"><field name="LEDS">`
        . . # . . 
        . . # . . 
        . . # . . 
        . . . . . 
        . . # . .
        `</field><next><block type="device_pause" id="1c/hb-rOFj(tH)~cwsGb"><value name="pause"><shadow type="timePicker" id="^.Nwm^X5i=[)%8Yx+R!^"><field name="ms">500</field></shadow></value><next><block type="device_show_leds" id="09{q))I{PxLVoLkO.Li8"><field name="LEDS">`
        . . . . . 
        . . . . . 
        . . . . . 
        . . . . . 
        . . . . .
        `</field><next><block type="device_pause" id="@03LVzMAsZ-VG39{z[$$"><value name="pause"><shadow type="timePicker" id="zv%Ig(yeckWV3pm1`1}i"><field name="ms">500</field></shadow></value></block></next></block></next></block></next></block></statement><statement name="ELSE"><block type="break_keyword" id="iK1-Dp{ad3=7ORf~j5HM"/></statement></block></statement></block></next></block></statement><next><block type="function_call" id="YJB~fOQB=t@9tU^5r#a^"><mutation name="clear" functionid="gc_!]?m:=slG{Vf9G-#_"/></block></next></block></next></block></statement><next><block type="device_pause" id="sDk,[F(mEN.Yog7+};5e"><value name="pause"><shadow type="timePicker" id="bHcF-SZ|=^Zc7%M:joR]"><field name="ms">1000</field></shadow></value></block></next></block></statement></block></statement></block><block type="pxt-on-start" id="GxpvG-AC50?KrZk#(%i|" x="-358" y="152"><statement name="HANDLER"><block type="bluetooth_start_uart_service" id="F4?!eAQ_M$HGRsg?0!.z"><next><block type="synth_set_volume" id="WS{c4Vj/X|~c}0z9a=Nq"><value name="volume"><shadow type="math_number_minmax" id="-a{=[.E}5U{uR8nf;ddY"><mutation min="0" max="255" label="Number" precision="0"/><field name="SLIDER">255</field></shadow></value><next><block type="variables_set" id="NTy*KAmw3WuW+e0]9DJX"><field name="VAR" id="^L)c|q}W=|mC(7q8bsZd">connected</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="GnM!ZdJ@38_iYM9GsT%9"><field name="BOOL">FALSE</field></block></value><next><block type="variables_set" id="LsIIfSknp%bU8A77sH,^"><field name="VAR" id="Zq}f$IrGLJ3}{rp%,,VN">buzz</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="`]ZF]M5BD)fcL!4cYjUj"><field name="BOOL">FALSE</field></block></value><next><block type="function_call" id="1|*#}|jJE?u+(Yi,hxe:"><mutation name="clear" functionid="gc_!]?m:=slG{Vf9G-#_"/></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="kpFbz`C/C~5%|*9L3|S," x="64" y="138"><mutation name="clear" functionid="gc_!]?m:=slG{Vf9G-#_"/><field name="function_name">clear</field><statement name="STACK"><block type="variables_set" id="7X7=GC~v?KK${W2pndb,"><field name="VAR" id="ZUC8rsRK,P;*)[1Pj1(n">silent</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id=",QqC;;F-eMNC0fU`!|0G"><field name="BOOL">FALSE</field></block></value><next><block type="device_set_brightness" id="66cpXG7a8N${R]e[,z)r"><value name="value"><shadow type="math_number_minmax" id=":whGb{X3K_9_YStdHi1t"><mutation min="0" max="255" label="Number" precision="0"/><field name="SLIDER">4</field></shadow></value><next><block type="device_show_leds" id="nF_uO!R]dlVWcR-rW*Jl"><field name="LEDS">`
        . . . . . 
        . . . . . 
        . . # . . 
        . . . . . 
        . . . . .
        `</field></block></next></block></next></block></statement></block><block type="device_button_event" id="f5ACG{TSOM?DbCGsVMk$" x="441" y="196"><field name="NAME">Button.B</field><statement name="HANDLER"><block type="controls_if" id="SBJEZU*C4}rIXgw[lB?y"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="@?N,jwpN6.C0x;;BR}3Q"><field name="VAR" id="Zq}f$IrGLJ3}{rp%,,VN">buzz</field></block></value><statement name="DO0"><block type="variables_set" id="r=!#,gqJ@I1X8/1Rh})X"><field name="VAR" id="ZUC8rsRK,P;*)[1Pj1(n">silent</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="xJTjr3czwK?F-jT|[Ey+"><field name="BOOL">TRUE</field></block></value></block></statement></block></statement></block><block type="bluetooth_on_connected" id="B-V5Xh3I$2!Az2FMMPor" x="-357" y="833"><comment pinned="false" h="80" w="160" relx="10" rely="10">When pegmon disconnects from us we simply set connected to false. This really has no effect at the moment, We handle it simply to indicate we know we can handle it.</comment><data>0;1;2;3</data><statement name="HANDLER"><block type="variables_set" id="ohFABg_-i_$m|78NgN,Z"><field name="VAR" id="^L)c|q}W=|mC(7q8bsZd">connected</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="7H!!`;iI8OKAhBbM0?VZ"><field name="BOOL">TRUE</field></block></value><next><block type="device_while" id="G-J5:5w[l6!k7#@abByH"><value name="COND"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="Kt15F+,QFPF*fM8~-1U3"><field name="VAR" id="^L)c|q}W=|mC(7q8bsZd">connected</field></block></value><statement name="DO"><block type="variables_set" id="o$F1x0mvS}N~/RtR|!np"><field name="VAR" id="a13$L_8V!,8o$l]FhJU6">command</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="bluetooth_uart_read" id="N!!#P0.+`yPpNWK_+TpM"><value name="del"><shadow type="serial_delimiter_conv" id=":LL}]]9xKT}kR6@p`?If"><field name="del">Delimiters.Colon</field></shadow></value></block></value><next><block type="controls_if" id="ei|t2!C*hSZ`=s-{zWVY"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="T|+MaLMy}H[:%IMOmIH$"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="4*.O4BZgr8)JGuN(TecV"><field name="VAR" id="a13$L_8V!,8o$l]FhJU6">command</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text" id="]vSnm/:8td#1cKbFE~au"><field name="TEXT">buzz</field></block></value></block></value><statement name="DO0"><block type="variables_set" id="m(}Cs;I{E;SpP_N2(cnr"><field name="VAR" id="Zq}f$IrGLJ3}{rp%,,VN">buzz</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="(9hrc(JwqF@2dIuO}ZHH"><field name="BOOL">TRUE</field></block></value></block></statement><statement name="ELSE"><block type="controls_if" id="ZzoO9p|1G/s?Uh)o`YfM"><value name="IF0"><shadow type="logic_boolean" id="mG{duEI[En!1GbIxSo^0"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="H]{A6I*D}g+9Pdvhek[d"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="/Fd%/+x;TQ/Z-Jq)l)YU"><field name="VAR" id="a13$L_8V!,8o$l]FhJU6">command</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text" id="Nu[D)!1tVu;-r@NS]Ny!"><field name="TEXT">nobuzz</field></block></value></block></value><statement name="DO0"><block type="variables_set" id="U?vA[+4sgWgA)DpH$+`]"><field name="VAR" id="Zq}f$IrGLJ3}{rp%,,VN">buzz</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="n8LxBX)uoJ!AC+yK|Nsb"><field name="BOOL">FALSE</field></block></value></block></statement></block></statement></block></next></block></statement></block></next></block></statement></block><block type="bluetooth_on_disconnected" id="p!8Q43hk._`VKQ6sAhJ?" x="315" y="834"><statement name="HANDLER"><block type="variables_set" id="rNP#KKJ-Y~rk:fka#rFF"><field name="VAR" id="^L)c|q}W=|mC(7q8bsZd">connected</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="u7TY!Kn6V:m@rTPSiwCq"><field name="BOOL">FALSE</field></block></value></block></statement></block></xml>